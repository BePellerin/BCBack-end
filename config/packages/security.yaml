security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern: ^/api/login
            stateless: true
            # login:
            #     path: api_login
            json_login:
                # check_path: api_login
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:   ^/api
            stateless: true
            jwt: ~
                 
        admin:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\LoginAuthenticator
            # form_login:
            #     login_path: app_login
            #     check_path: app_login
            logout:
                path: app_logout
                target: admin
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 86400
                path: /
                always_remember_me: true
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true       
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        #   - { path: ^/logout, roles: ROLE_USER }
          - { path: ^/api/login, roles: PUBLIC_ACCESS }
        #   - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
        #   - { path: ^/user, roles: ROLE_USER }
        #   - { path: ^/user/new, roles: IS_AUTHENTICATED_ANONYMOUSLY }
          - { path: ^/admin, roles: ROLE_ADMIN }
        #   - { path: ^/$, roles: PUBLIC_ACCESS }
        #   - { path: ^/, roles: IS_AUTHENTICATED_FULLY }
        #  - { path: ^/home, roles: ROLE_ADMIN }
        #  - { path: ^/nft, roles: ROLE_ADMIN }
        #  - { path: ^/history, roles: ROLE_ADMIN }
        #  - { path: ^/drop, roles: ROLE_ADMIN }
        #  - { path: ^/collecs, roles: ROLE_ADMIN }
        #  - { path: ^/category, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            App\Entity\User:
                algorithm: auto

            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
